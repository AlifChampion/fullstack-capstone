{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alifchampion/Downloads/chat_application-main/src/components/GoogleAuth.js\",\n    _s = $RefreshSig$();\n\n// import { Button } from '@material-ui/core'\n// import Button from '@mui/material/Button'\nimport React, { useEffect, useRef } from 'react';\n\nconst loadScript = src => new Promise((resolve, reject) => {\n  if (document.querySelector(`script[src=\"${src}\"]`)) return resolve();\n  const script = document.createElement('script');\n  script.src = src;\n\n  script.onload = () => resolve();\n\n  script.onerror = err => reject(err);\n\n  document.body.appendChild(script);\n});\n\nconst GoogleAuth = () => {\n  _s();\n\n  // const { token, setToken, setGoogleId } = useContext(AuthContext);\n  const googleButton = useRef(null);\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    const src = 'https://accounts.google.com/gsi/client';\n    const id = '212943273540-hbq3r9sufv65m1qk6g4h0iod1msgb7sj.apps.googleusercontent.com';\n    loadScript(src).then(() => {\n      /* global google*/\n      console.log(google);\n      google.accounts.id.initialize({\n        client_id: id,\n        callback: handleCredentialResponse\n      });\n      google.accounts.id.renderButton(googleButton.current, {\n        theme: 'contained',\n        size: 'medium'\n      });\n    }).catch(console.error);\n    return () => {\n      const scriptTag = document.querySelector(`script[src=\"${src}\"]`);\n      if (scriptTag) document.body.removeChild(scriptTag);\n    };\n  }, []);\n\n  function handleCredentialResponse(response) {\n    console.log('Encoded JWT ID token: ' + response.credential);\n    console.log('Decoded JWT ID token: ' + JSON.stringify(parseJwt(response.credential)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    fullWidth: true,\n    variant: \"contained\",\n    ref: googleButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleAuth, \"pfVnNesIJjwsN4UrUWXvzB8rcrc=\");\n\n_c = GoogleAuth;\n\nfunction parseJwt(token) {\n  const base64Url = token.split('.')[1];\n  let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}\n\nexport default GoogleAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"sources":["/Users/alifchampion/Downloads/chat_application-main/src/components/GoogleAuth.js"],"names":["React","useEffect","useRef","loadScript","src","Promise","resolve","reject","document","querySelector","script","createElement","onload","onerror","err","body","appendChild","GoogleAuth","googleButton","console","log","id","then","google","accounts","initialize","client_id","callback","handleCredentialResponse","renderButton","current","theme","size","catch","error","scriptTag","removeChild","response","credential","JSON","stringify","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse"],"mappings":"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","sourcesContent":["// import { Button } from '@material-ui/core'\n// import Button from '@mui/material/Button'\nimport React, { useEffect, useRef } from 'react';\n\nconst loadScript = (src) =>\n  new Promise((resolve, reject) => {\n    if (document.querySelector(`script[src=\"${src}\"]`)) return resolve();\n    const script = document.createElement('script');\n    script.src = src;\n    script.onload = () => resolve();\n    script.onerror = (err) => reject(err);\n    document.body.appendChild(script);\n  });\n\nconst GoogleAuth = () => {\n// const { token, setToken, setGoogleId } = useContext(AuthContext);\n  const googleButton = useRef(null);\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    const src = 'https://accounts.google.com/gsi/client';\n    const id = '212943273540-hbq3r9sufv65m1qk6g4h0iod1msgb7sj.apps.googleusercontent.com';\n\n    loadScript(src)\n      .then(() => {\n        /* global google*/\n        console.log(google);\n        google.accounts.id.initialize({\n          client_id: id,\n          callback: handleCredentialResponse,\n        });\n        google.accounts.id.renderButton(\n          googleButton.current,\n          { theme: 'contained', size: 'medium' }\n        );\n      })\n      .catch(console.error);\n\n\n    return () => {\n      const scriptTag = document.querySelector(`script[src=\"${src}\"]`);\n      if (scriptTag) document.body.removeChild(scriptTag);\n    };\n  }, []);\n\n  function handleCredentialResponse(response) {\n    console.log('Encoded JWT ID token: ' + response.credential);\n    console.log('Decoded JWT ID token: ' + JSON.stringify(parseJwt(response.credential)));\n  }\n\n  return (\n    <button fullWidth variant=\"contained\" ref={googleButton}></button>\n  );\n};\n\nfunction parseJwt(token) {\n  const base64Url = token.split('.')[1];\n  let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n}\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}