{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alifchampion/Downloads/chat_application-main/src/components/Switch/SwitchMode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Dark.css';\nimport './Light.css';\nimport './index.css';\n\nconst SwitchMode = () => {\n  _s();\n\n  const [userMode, setUserMode] = useState(!$localStorage.getItem('theme') === 'dark');\n  useEffect(() => {\n    document.getElementsByTagName('HTML')[0].setAttribute('data-theme', localStorage.getItem('theme'));\n  }, []);\n\n  const toggleThemeChange = () => {\n    if (userMode === false) {\n      localStorage.setItem('theme', 'dark');\n      document.getElementsByTagName('HTML')[0].setAttribute('data-theme', localStorage.getItem('theme'));\n      setUserMode(true);\n    } else {\n      localStorage.setItem('theme', 'light');\n      document.getElementsByTagName('HTML')[0].setAttribute('data-theme', localStorage.getItem('theme'));\n      setUserMode(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: userMode,\n      onChange: () => toggleThemeChange()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"slider round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwitchMode, \"04SUuSOriDpzxHHmMIiwdEdOejA=\");\n\n_c = SwitchMode;\nexport default SwitchMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchMode\");","map":{"version":3,"sources":["/Users/alifchampion/Downloads/chat_application-main/src/components/Switch/SwitchMode.js"],"names":["React","useState","useEffect","SwitchMode","userMode","setUserMode","$localStorage","getItem","document","getElementsByTagName","setAttribute","localStorage","toggleThemeChange","setItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAO,aAAP;AACA,OAAO,aAAP;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,CAACK,aAAa,CAACC,OAAd,CAAsB,OAAtB,CAAD,KAAoC,MAArC,CAAxC;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CACLC,oBADH,CACwB,MADxB,EACgC,CADhC,EAEGC,YAFH,CAEgB,YAFhB,EAE8BC,YAAY,CAACJ,OAAb,CAAqB,OAArB,CAF9B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMK,iBAAiB,GAAG,MAAM;AAC9B,QAAIR,QAAQ,KAAK,KAAjB,EAAwB;AACtBO,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAL,MAAAA,QAAQ,CACLC,oBADH,CACwB,MADxB,EACgC,CADhC,EAEGC,YAFH,CAEgB,YAFhB,EAE8BC,YAAY,CAACJ,OAAb,CAAqB,OAArB,CAF9B;AAGAF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAND,MAMO;AACLM,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAL,MAAAA,QAAQ,CACLC,oBADH,CACwB,MADxB,EACgC,CADhC,EAEGC,YAFH,CAEgB,YAFhB,EAE8BC,YAAY,CAACJ,OAAb,CAAqB,OAArB,CAF9B;AAGAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAdD;;AAgBA,sBACE;AAAO,IAAA,SAAS,EAAC,QAAjB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,cAAc,EAAED,QAFlB;AAGE,MAAA,QAAQ,EAAE,MAAMQ,iBAAiB;AAHnC;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlCD;;GAAMT,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Dark.css';\nimport './Light.css';\nimport './index.css';\n\nconst SwitchMode = () => {\n  const [userMode, setUserMode] = useState(!$localStorage.getItem('theme') === 'dark');\n  useEffect(() => {\n    document\n      .getElementsByTagName('HTML')[0]\n      .setAttribute('data-theme', localStorage.getItem('theme'));\n  }, []);\n\n  const toggleThemeChange = () => {\n    if (userMode === false) {\n      localStorage.setItem('theme', 'dark');\n      document\n        .getElementsByTagName('HTML')[0]\n        .setAttribute('data-theme', localStorage.getItem('theme'));\n      setUserMode(true);\n    } else {\n      localStorage.setItem('theme', 'light');\n      document\n        .getElementsByTagName('HTML')[0]\n        .setAttribute('data-theme', localStorage.getItem('theme'));\n      setUserMode(false);\n    }\n  };\n\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        defaultChecked={userMode}\n        onChange={() => toggleThemeChange()}\n      />\n      <span className=\"slider round\" />\n    </label>\n  );\n};\n\nexport default SwitchMode;\n"]},"metadata":{},"sourceType":"module"}