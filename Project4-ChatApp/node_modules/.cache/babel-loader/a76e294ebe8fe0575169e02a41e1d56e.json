{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alifchampion/Downloads/chat_application-main/src/components/GoogleAuth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\n\nconst loadScript = src => new Promise((resolve, reject) => {\n  if (document.querySelector(`script[src=\"${src}\"]`)) return resolve();\n  const script = document.createElement('script');\n  script.src = src;\n\n  script.onload = () => resolve();\n\n  script.onerror = err => reject(err);\n\n  document.body.appendChild(script);\n});\n\nconst GoogleAuth = () => {\n  _s();\n\n  //const { token, setToken, setGoogleId } = useContext(AuthContext);\n  const googleButton = useRef(null);\n  useEffect(() => {\n    // all the script is get at the google cloud\n    console.log('EFFECT RUNNING');\n    const src = 'https://accounts.google.com/gsi/client';\n    const id = \"212943273540-hbq3r9sufv65m1qk6g4h0iod1msgb7sj.apps.googleusercontent.com\";\n    loadScript(src).then(() => {\n      /*global google*/\n      console.log(google);\n      google.accounts.id.initialize({\n        client_id: id,\n        callback: handleCredentialResponse\n      });\n      /*render the google button*/\n\n      google.accounts.id.renderButton(googleButton.current, {\n        theme: 'dark',\n        size: 'medium',\n        width: 360,\n        backgroundColor: 'black'\n      });\n    }).catch(console.error);\n    return () => {\n      const scriptTag = document.querySelector(`script[src=\"${src}\"]`);\n      if (scriptTag) document.body.removeChild(scriptTag);\n    };\n  }, []);\n\n  function handleCredentialResponse(response) {\n    console.log(\"Encoded JWT ID token: \" + response.credential);\n    console.log(\"Decoded JWT ID token: \" + JSON.stringify(parseJwt(response.credential)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    fullWidth: true,\n    variant: \"contained\",\n    ref: googleButton,\n    children: \"Sign In\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GoogleAuth, \"pfVnNesIJjwsN4UrUWXvzB8rcrc=\");\n\n_c = GoogleAuth;\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}\n\n;\nexport default GoogleAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"sources":["/Users/alifchampion/Downloads/chat_application-main/src/components/GoogleAuth.js"],"names":["React","useEffect","useRef","loadScript","src","Promise","resolve","reject","document","querySelector","script","createElement","onload","onerror","err","body","appendChild","GoogleAuth","googleButton","console","log","id","then","google","accounts","initialize","client_id","callback","handleCredentialResponse","renderButton","current","theme","size","width","backgroundColor","catch","error","scriptTag","removeChild","response","credential","JSON","stringify","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","parse"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nconst loadScript = (src) =>\n    new Promise((resolve, reject) => {\n        if (document.querySelector(`script[src=\"${src}\"]`)) return resolve()\n        const script = document.createElement('script')\n        script.src = src\n        script.onload = () => resolve()\n        script.onerror = (err) => reject(err)\n        document.body.appendChild(script)\n    })\n\nconst GoogleAuth = () => {\n    //const { token, setToken, setGoogleId } = useContext(AuthContext);\n    const googleButton = useRef(null);\n\n    useEffect(() => {\n        // all the script is get at the google cloud\n        console.log('EFFECT RUNNING');\n        const src = 'https://accounts.google.com/gsi/client'\n        const id = \"212943273540-hbq3r9sufv65m1qk6g4h0iod1msgb7sj.apps.googleusercontent.com\"\n\n        loadScript(src)\n            .then(() => {\n                /*global google*/\n                console.log(google)\n                google.accounts.id.initialize({\n                    client_id: id,\n                    callback: handleCredentialResponse,\n                })\n                /*render the google button*/\n                google.accounts.id.renderButton(\n                    googleButton.current,\n                    { theme: 'dark', size: 'medium', width: 360, backgroundColor: 'black' }\n                )\n            })\n            .catch(console.error)\n\n\n        return () => {\n            const scriptTag = document.querySelector(`script[src=\"${src}\"]`)\n            if (scriptTag) document.body.removeChild(scriptTag)\n        }\n    }, [])\n\n    function handleCredentialResponse(response) {\n        console.log(\"Encoded JWT ID token: \" + response.credential);\n        console.log(\"Decoded JWT ID token: \" + JSON.stringify(parseJwt(response.credential)));\n    }\n\n    return (\n        <button fullWidth variant=\"contained\" ref={googleButton}>Sign In</button>\n    )\n}\n\nfunction parseJwt(token) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    return JSON.parse(jsonPayload);\n};\n\nexport default GoogleAuth\n"]},"metadata":{},"sourceType":"module"}