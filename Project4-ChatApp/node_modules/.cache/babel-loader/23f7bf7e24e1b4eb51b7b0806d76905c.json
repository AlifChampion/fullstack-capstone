{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alifchampion/Downloads/chat_application-main/src/components/GoogleAuth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\n\nconst loadScript = src => new Promise((resolve, reject) => {\n  if (document.querySelector(`script[src=\"${src}\"]`)) {\n    const script = document.createElement('script');\n    script.src = src;\n\n    script.onload = () => resolve();\n\n    script.onerror = err => reject(err);\n\n    document.body.appendChild(script);\n  }\n\n  return resolve();\n});\n\nconst GoogleAuth = () => {\n  _s();\n\n  // const { token, setToken, setGoogleId } = useContext(AuthContext);\n  const googleButton = useRef(null);\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    const src = 'https://accounts.google.com/gsi/client';\n    const id = '993833527454-atf8ngfsnu7u86g6ivfk0j182obl812m.apps.googleusercontent.com';\n\n    function parseJwt(token) {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(c => '%'('00', c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n      return JSON.parse(jsonPayload);\n    }\n\n    function handleCredentialResponse(response) {\n      console.log('Encoded JWT ID token: ', response.credential);\n      console.log('Decoded JWT ID token: ', JSON.stringify(parseJwt(response.credential)));\n    }\n\n    loadScript(src).then(() => {\n      /* global google */\n      console.log(google);\n      google.accounts.id.initialize({\n        client_id: id,\n        callback: handleCredentialResponse\n      });\n      google.accounts.id.renderButton(googleButton.current, {\n        theme: 'contained',\n        size: 'medium'\n      });\n    }).catch(console.error);\n    return () => {\n      const scriptTag = document.querySelector(`script[src=\"${src}\"]`);\n      if (scriptTag) document.body.removeChild(scriptTag);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    ref: googleButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleAuth, \"pfVnNesIJjwsN4UrUWXvzB8rcrc=\");\n\n_c = GoogleAuth;\nexport default GoogleAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"sources":["/Users/alifchampion/Downloads/chat_application-main/src/components/GoogleAuth.js"],"names":["React","useEffect","useRef","loadScript","src","Promise","resolve","reject","document","querySelector","script","createElement","onload","onerror","err","body","appendChild","GoogleAuth","googleButton","console","log","id","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","handleCredentialResponse","response","credential","stringify","then","google","accounts","initialize","client_id","callback","renderButton","current","theme","size","catch","error","scriptTag","removeChild"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst loadScript = (src) => new Promise((resolve, reject) => {\n  if (document.querySelector(`script[src=\"${src}\"]`)) {\n    const script = document.createElement('script');\n    script.src = src;\n    script.onload = () => resolve();\n    script.onerror = (err) => reject(err);\n    document.body.appendChild(script);\n  }\n  return resolve();\n});\n\nconst GoogleAuth = () => {\n// const { token, setToken, setGoogleId } = useContext(AuthContext);\n  const googleButton = useRef(null);\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    const src = 'https://accounts.google.com/gsi/client';\n    const id = '993833527454-atf8ngfsnu7u86g6ivfk0j182obl812m.apps.googleusercontent.com';\n\n    function parseJwt(token) {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(window.atob(base64).split('').map((c) => '%'('00', c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n\n      return JSON.parse(jsonPayload);\n    }\n\n    function handleCredentialResponse(response) {\n      console.log('Encoded JWT ID token: ', response.credential);\n      console.log('Decoded JWT ID token: ', JSON.stringify(parseJwt(response.credential)));\n    }\n\n    loadScript(src)\n      .then(() => {\n        /* global google */\n        console.log(google);\n        google.accounts.id.initialize({\n          client_id: id,\n          callback: handleCredentialResponse,\n        });\n        google.accounts.id.renderButton(\n          googleButton.current,\n          { theme: 'contained', size: 'medium' },\n        );\n      })\n      .catch(console.error);\n\n    return () => {\n      const scriptTag = document.querySelector(`script[src=\"${src}\"]`);\n      if (scriptTag) document.body.removeChild(scriptTag);\n    };\n  }, []);\n\n  return (\n    <button type=\"button\" fullWidth variant=\"contained\" ref={googleButton}></button>\n  );\n};\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}